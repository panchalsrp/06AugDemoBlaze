<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="5" passed="1" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-01-01T13:20:09 IST" name="RegressionSuite" finished-at="2024-01-01T13:21:53 IST" duration-ms="104129">
    <groups>
      <group name="Sanity">
        <method signature="BuyProduct.verifyBuyProductWithLogin()[pri:0, instance:com.db.testLayer.BuyProduct@27adc16e]" name="verifyBuyProductWithLogin" class="com.db.testLayer.BuyProduct"/>
      </group> <!-- Sanity -->
      <group name="Regression">
        <method signature="BuyProduct.verifyBuyProductWithLogin1()[pri:0, instance:com.db.testLayer.BuyProduct@27adc16e]" name="verifyBuyProductWithLogin1" class="com.db.testLayer.BuyProduct"/>
        <method signature="LoginPageTest.verifyLogin()[pri:0, instance:com.db.testLayer.LoginPageTest@6cdba6dc]" name="verifyLogin" class="com.db.testLayer.LoginPageTest"/>
      </group> <!-- Regression -->
      <group name="Smoke">
        <method signature="BuyProduct.verifyBuyProductWithLogin1()[pri:0, instance:com.db.testLayer.BuyProduct@27adc16e]" name="verifyBuyProductWithLogin1" class="com.db.testLayer.BuyProduct"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-01-01T13:20:09 IST" name="RegressionSuite" finished-at="2024-01-01T13:21:53 IST" duration-ms="104129">
      <class name="com.db.testLayer.LoginPageTest">
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.db.testLayer.LoginPageTest@6cdba6dc]" started-at="2024-01-01T13:21:38 IST" name="setUp" finished-at="2024-01-01T13:21:45 IST" duration-ms="7429" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLogin()[pri:0, instance:com.db.testLayer.LoginPageTest@6cdba6dc]" started-at="2024-01-01T13:21:45 IST" name="verifyLogin" finished-at="2024-01-01T13:21:51 IST" duration-ms="6095" status="FAIL">
          <exception class="org.openqa.selenium.UnhandledAlertException">
            <message>
              <![CDATA[unexpected alert open: {Alert text : Please fill out Username and Password.}
  (Session info: chrome=120.0.6099.130): Please fill out Username and Password.
Build info: version: '4.12.1', revision: '8e34639b11'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c19b5a589780394fc92d75187db94cd6, findElement {using=xpath, value=//a[@id='nameofuser']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\Admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63002}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63002/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c19b5a589780394fc92d75187db94cd6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.UnhandledAlertException: unexpected alert open: {Alert text : Please fill out Username and Password.}
  (Session info: chrome=120.0.6099.130): Please fill out Username and Password.
Build info: version: '4.12.1', revision: '8e34639b11'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '19'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [c19b5a589780394fc92d75187db94cd6, findElement {using=xpath, value=//a[@id='nameofuser']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 120.0.6099.130, chrome: {chromedriverVersion: 120.0.6099.109 (3419140ab66..., userDataDir: C:\Users\Admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:63002}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:63002/devtoo..., se:cdpVersion: 120.0.6099.130, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: c19b5a589780394fc92d75187db94cd6
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:131)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:196)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:171)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:602)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:353)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy21.getText(Unknown Source)
at com.db.pageLayer.HomePage.getStatus(HomePage.java:43)
at com.db.testLayer.LoginPageTest.verifyLogin(LoginPageTest.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.UnhandledAlertException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.db.testLayer.LoginPageTest@6cdba6dc]" started-at="2024-01-01T13:21:53 IST" name="tearDown" finished-at="2024-01-01T13:21:53 IST" duration-ms="395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.db.testLayer.LoginPageTest -->
      <class name="com.db.testLayer.BuyProduct">
        <test-method is-config="true" signature="start()[pri:0, instance:com.db.testLayer.BuyProduct@27adc16e]" started-at="2024-01-01T13:20:09 IST" name="start" finished-at="2024-01-01T13:20:09 IST" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- start -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.db.testLayer.BuyProduct@27adc16e]" started-at="2024-01-01T13:20:09 IST" name="setUp" finished-at="2024-01-01T13:20:25 IST" duration-ms="15522" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBuyProductWithLogin()[pri:0, instance:com.db.testLayer.BuyProduct@27adc16e]" started-at="2024-01-01T13:20:25 IST" name="verifyBuyProductWithLogin" finished-at="2024-01-01T13:20:56 IST" duration-ms="31491" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Thank you for your purc] but found [Thank you for your purchase!]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Thank you for your purc] but found [Thank you for your purchase!]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at com.db.testLayer.BuyProduct.verifyBuyProductWithLogin(BuyProduct.java:39)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBuyProductWithLogin -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.db.testLayer.BuyProduct@27adc16e]" started-at="2024-01-01T13:20:57 IST" name="tearDown" finished-at="2024-01-01T13:20:57 IST" duration-ms="559" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp(java.lang.String)[pri:0, instance:com.db.testLayer.BuyProduct@27adc16e]" started-at="2024-01-01T13:20:57 IST" name="setUp" finished-at="2024-01-01T13:21:09 IST" duration-ms="11687" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyBuyProductWithLogin1()[pri:0, instance:com.db.testLayer.BuyProduct@27adc16e]" started-at="2024-01-01T13:21:09 IST" name="verifyBuyProductWithLogin1" finished-at="2024-01-01T13:21:37 IST" duration-ms="28292" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyBuyProductWithLogin1 -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.db.testLayer.BuyProduct@27adc16e]" started-at="2024-01-01T13:21:37 IST" name="tearDown" finished-at="2024-01-01T13:21:38 IST" duration-ms="481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="end()[pri:0, instance:com.db.testLayer.BuyProduct@27adc16e]" started-at="2024-01-01T13:21:53 IST" name="end" finished-at="2024-01-01T13:21:53 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- end -->
      </class> <!-- com.db.testLayer.BuyProduct -->
    </test> <!-- RegressionSuite -->
  </suite> <!-- RegressionSuite -->
</testng-results>
